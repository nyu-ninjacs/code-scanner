rules:
  - id: header_xss_protection
    patterns:
      - pattern-either:
          - pattern-inside: function ($REQ, $RES, ...) {...}
          - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
          - pattern-inside: $X = function $FUNC($REQ, $RES, ...) {...}
          - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
          - pattern-inside: $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
      - pattern-either:
          - pattern: |
              $RES.header("=~/[X-XSS-Protection|x-xss-protection]/", 0, ...)
          - pattern: |
              $RES.set("=~/[X-XSS-Protection|x-xss-protection]/", 0, ...)
          - pattern: >
              $RES.set(..., { "=~/[X-XSS-Protection|x-xss-protection]/" : 0 },
              ...)
          - pattern: >
              $RES.writeHead(..., {"=~/[X-XSS-Protection|x-xss-protection]/": 0
              }, ...);
          - pattern: |
              $VAL = 0;
              ...
              $RES.header("=~/[X-XSS-Protection|x-xss-protection]/", $VAL, ...);
          - pattern: |
              $VAL = 0;
              ...
              $RES.set("=~/[X-XSS-Protection|x-xss-protection]/", $VAL, ...);
          - pattern: >
              $VAL = 0; ... $RES.set(..., {
              "=~/[X-XSS-Protection|x-xss-protection]/" : $VAL }, ...);
          - pattern: >
              $VAL = 0; ... $RES.writeHead(...,
              {"=~/[X-XSS-Protection|x-xss-protection]/": $VAL }, ...);
         
    message: >-
      The HTTP header X-XSS-Protection activates protection on the user's browser side to mitigate XSS-based attacks. 
      It is important to keep it activated whenever possible.
    languages:
      - javascript
    severity: ERROR
    metadata:
      owasp: 'A6: Security Misconfiguration'