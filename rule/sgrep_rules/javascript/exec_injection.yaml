rules:
  - id: exec_injection
    patterns: 
      - pattern-inside: |
          require('child_process');
          ...
      - pattern-either:
          - pattern-inside: function ($REQ, $RES, ...) {...}
          - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
          - pattern-inside: $X = function $FUNC($REQ, $RES, ...) {...}
          - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
          - pattern-inside: $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
      - pattern-either:
          - pattern: |
              $EXEC.exec(..., <... $REQ.$QUERY.$VAR ...>, ...)
          - pattern: |
              $EXEC.exec(..., <... $REQ.$QUERY ...>, ...)
          - pattern: |
              $EXEC.execSync(..., <... $REQ.$QUERY.$VAR ...>, ...)
          - pattern: |
              $EXEC.execSync(..., <... $REQ.$QUERY ...>, ...)
          - pattern: |
              $INP = <... $REQ.$QUERY.$VAR ...>;
              ...
              $EXEC.exec(..., <... $INP ...>, ...);
          - pattern: |
              $INP = <... $REQ.$QUERY ...>;
              ...
              $EXEC.exec(..., <... $INP ...>, ...);
          - pattern: |
              $INP = <... $REQ.$QUERY ...>;
              ...
              $EXEC.execSync(..., <... $INP ...>, ...);
          - pattern: |
              $INP = <... $REQ.$QUERY.$VAR ...>;
              ...
              $EXEC.execSync(..., <... $INP ...>, ...);
         
    message: >-
      Allowing data from user input to reach the 'exec' command 
      without treatment could cause a Remote Code Execution vulnerability
    languages:
      - javascript
    severity: ERROR
    metadata:
      owasp: 'A1: Injection'
      cwe: "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"